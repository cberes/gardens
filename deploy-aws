#!/usr/bin/env bash

die () {
    echo >&2 "$@"
    exit 1
}

# read the arguments
env="$1"
[ -n "$env" ] || die "Usage: ./deploy-aws ENVIRONMENT"

# create our variables
stack_name="gardenmanager-$env"
s3_dest=s3://cberes-gardenmanager/web-app-dist/
lambda_layer=$(ls -t serverless-web-app/build/distributions/lambda-layer-boneyard-*.zip | head -1)
source_bundle=$(ls -t serverless-web-app/build/distributions/source-bundle-boneyard-*.zip | head -1)

# upload files
aws s3 cp "$lambda_layer" $s3_dest
aws s3 cp "$source_bundle" $s3_dest
aws s3 cp cloudformation/main.yml $s3_dest

# decide: create or update
aws cloudformation list-stacks \
  --stack-status-filter CREATE_COMPLETE UPDATE_COMPLETE UPDATE_ROLLBACK_COMPLETE \
  | jq -r '.StackSummaries[].StackName' | grep -q "^$stack_name$"
stack_exists=$?
if [ $stack_exists -eq 0 ]; then
  stack_op=update-stack
else
  stack_op=create-stack
fi

# deploy the stack
aws cloudformation $stack_op \
--stack-name $stack_name \
--template-url 'https://cberes-gardenmanager.s3.amazonaws.com/web-app-dist/main.yml' \
--capabilities CAPABILITY_NAMED_IAM \
--parameters '[
  {
    "ParameterKey": "AppPrefix",
    "ParameterValue": "gardens",
    "UsePreviousValue": false
  },
  {
    "ParameterKey": "BusinessName",
    "ParameterValue": "Flower Companion",
    "UsePreviousValue": false
  },
  {
    "ParameterKey": "DomainName",
    "ParameterValue": "flowercompanion.com",
    "UsePreviousValue": false
  },
  {
    "ParameterKey": "EnvironmentName",
    "ParameterValue": "'$env'",
    "UsePreviousValue": false
  },
  {
    "ParameterKey": "LambdaBundleName",
    "ParameterValue": "'$(basename $source_bundle)'",
    "UsePreviousValue": false
  },
  {
    "ParameterKey": "LambdaLayerBundleName",
    "ParameterValue": "'$(basename $lambda_layer)'",
    "UsePreviousValue": false
  },
  {
    "ParameterKey": "StagingBucketName",
    "ParameterValue": "gardenmanager",
    "UsePreviousValue": false
  }
]'
